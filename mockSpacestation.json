{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "3373983945814074975"
    }
  },
  "parameters": {
    "groundstationVirtualMachineName": {
      "type": "string",
      "defaultValue": "mockGroundstation",
      "metadata": {
        "description": "The name of the Mock Groundstation Virtual Machine"
      }
    },
    "groundstationLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "The region to deploy Mock Groundstation resources into"
      }
    },
    "spacestationVirtualMachineName": {
      "type": "string",
      "defaultValue": "mockSpacestation",
      "metadata": {
        "description": "The name of the Mock Spacestation Virtual Machine"
      }
    },
    "spacestationLocation": {
      "type": "string",
      "defaultValue": "australiaeast",
      "metadata": {
        "description": "The region to deploy Mock Spacestation resources into"
      }
    }
  },
  "functions": [],
  "variables": {
    "adminUsername": "azureuser",
    "generateSshKeyScriptContent": "#!/bin/bash\necho -e \\'y\\' | ssh-keygen -f scratch -N \"\"\nprivateKey=$(cat scratch)\npublicKey=$(cat scratch.pub)\njson=\"{\\\"keyinfo\\\":{\\\"privateKey\\\":\\\"$privateKey\\\",\\\"publicKey\\\":\\\"$publicKey\\\"}}\"\necho \"$json\" > \"$AZ_SCRIPTS_OUTPUT_PATH\"",
    "generateSshKeyScriptName": "generateSshKey",
    "keyvaultName": "[toLower(format('mockisskv{0}', uniqueString(resourceGroup().id)))]",
    "keyvaultTenantId": "[subscription().tenantId]",
    "privateKeySecretName": "sshPrivateKey",
    "publicKeySecretName": "sshPublicKey"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[variables('keyvaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accessPolicies": [],
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        },
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "tenantId": "[variables('keyvaultTenantId')]"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[variables('generateSshKeyScriptName')]",
      "location": "[resourceGroup().location]",
      "kind": "AzureCLI",
      "properties": {
        "azCliVersion": "2.25.0",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D",
        "scriptContent": "[variables('generateSshKeyScriptContent')]",
        "timeout": "PT30M"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[format('{0}/{1}', variables('keyvaultName'), variables('publicKeySecretName'))]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))).outputs.keyinfo.publicKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[format('{0}/{1}', variables('keyvaultName'), variables('privateKeySecretName'))]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))).outputs.keyinfo.privateKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "mockGroundstationVm",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "location": {
            "value": "[parameters('groundstationLocation')]"
          },
          "sshPrivateKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))).outputs.keyinfo.privateKey]"
          },
          "sshPublicKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))).outputs.keyinfo.publicKey]"
          },
          "virtualMachineName": {
            "value": "[parameters('groundstationVirtualMachineName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "10011118235435377344"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location to deploy your Virtual Machine"
              }
            },
            "adminUsername": {
              "type": "string",
              "defaultValue": "azureuser",
              "metadata": {
                "description": "The administrator username for your Virtual Machine"
              }
            },
            "hostToSync": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The hostname of the machine to configure rsync to"
              }
            },
            "sshPrivateKey": {
              "type": "secureString",
              "metadata": {
                "description": "The private key for SSH access to other Virtual Machines in this deployment"
              }
            },
            "sshPublicKey": {
              "type": "secureString",
              "metadata": {
                "description": "The public key for SSH access to this Virtual Machine"
              }
            },
            "ubuntuOSVersion": {
              "type": "string",
              "defaultValue": "18.04-LTS",
              "metadata": {
                "description": "The version of Ubuntu to use for your Virtual Machine"
              }
            },
            "virtualMachineName": {
              "type": "string",
              "metadata": {
                "description": "The name of your Virtual Machine"
              }
            },
            "virtualMachineSize": {
              "type": "string",
              "defaultValue": "Standard_B2s",
              "metadata": {
                "description": "The size of your Virtual Machine"
              }
            },
            "osDiskType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "The disk to use for your Virtual Machine"
              }
            }
          },
          "functions": [],
          "variables": {
            "dnsLabelPrefix": "[toLower(format('{0}-{1}', parameters('virtualMachineName'), uniqueString(resourceGroup().id)))]",
            "virtualNetworkName": "[format('{0}VirtualNetwork', parameters('virtualMachineName'))]",
            "virtualNetworkAddressPrefix": "10.1.0.0/16",
            "subnetName": "[format('{0}Subnet', parameters('virtualMachineName'))]",
            "subnetAddressPrefix": "10.1.0.0/24",
            "networkSecurityGroupName": "[format('{0}NetworkSecurityGroup', parameters('virtualMachineName'))]",
            "virtualMachineNetworkInterfaceName": "[format('{0}NetworkInterface', parameters('virtualMachineName'))]",
            "virtualMachinePublicIPAddressName": "[format('{0}publicIPAddress', parameters('virtualMachineName'))]",
            "destinationScript": "[replace('#!/bin/bash\n#\n# configureDestination.sh - applied to a virtual machine by an Azure Custom Script Extension resource to\n#   1. create a /home/azureuser/trials directory\n#   2. write a private key to /home/azureuser/.ssh/mockSpacestationPrivateKey\n#   *. use Bicep''s replace() function to inject values wherever privateKeyDefaultValue appears\n\n# 1. setup trials directory\nmkdir /home/azureuser/trials\nchown azureuser /home/azureuser/trials\n\n# 2. write private key\necho \"privateKeyDefaultValue\" >> /home/azureuser/.ssh/mockSpacestationPrivateKey\nchmod 600 /home/azureuser/.ssh/mockSpacestationPrivateKey\n', 'privateKeyDefaultValue', parameters('sshPrivateKey'))]",
            "sourceScriptWithDestination": "[replace('#!/bin/bash\n#\n# configureDestination.sh - applied to a virtual machine by an Azure Custom Script Extension resource to\n#   1. create a /home/azureuser/trials directory\n#   2. write a private key to /home/azureuser/.ssh/mockSpacestationPrivateKey\n#   3. add the destination machine''s public keys to root''s known_hosts\n#   4. write a /home/azureusers/sync.sh script that contains an rsync command that \n#      clones the /trials directory to the destination machine\n#   5. register a cron job to execute the sync.sh script on a schedule\n#   *. use Bicep''s replace() function to\n#        inject values wherever virtualMachineNameDefaultValue appears\n#        inject values wherever privateKeyDefaultValue appears\n#        inject values wherever hostToSyncDefaultValue appears\n\n# 1. setup trials directory\nmkdir /home/azureuser/trials\necho \"Hello! It is currently $(date) on the virtualMachineNameDefaultValue. Happy hacking!\" >> /home/azureuser/trials/hello.txt\nchown azureuser /home/azureuser/trials\n\n# 2. write private key\necho \"privateKeyDefaultValue\" >> /home/azureuser/.ssh/mockSpacestationPrivateKey\nchmod 600 /home/azureuser/.ssh/mockSpacestationPrivateKey\n\n# 3. write destination machine keys to known_hosts\nssh-keyscan hostToSyncDefaultValue >> /root/.ssh/known_hosts\n\n# 4. setup sync script\nmkdir /home/azureuser/scripts\ntouch /home/azureuser/scripts/sync.sh\ncat > /home/azureuser/scripts/sync.sh <<EOF\n#!/bin/bash\nsudo rsync -arvz --bwlimit=250 -e \"ssh -i /home/azureuser/.ssh/mockSpacestationPrivateKey\" --verbose --progress /home/azureuser/trials/* azureuser@hostToSyncDefaultValue:/home/azureuser/trials\nEOF\nchmod +x /home/azureuser/scripts/sync.sh\n\n# 5. register cron\necho \"* * * * * /home/azureuser/scripts/sync.sh >> /home/azureuser/azure-sync.log 2>&1\" >> newJob\ncrontab newJob\n', 'hostToSyncDefaultValue', parameters('hostToSync'))]",
            "sourceScriptWithDestinationSource": "[replace(variables('sourceScriptWithDestination'), 'virtualMachineNameDefaultValue', parameters('virtualMachineName'))]",
            "sourceScriptWithDestinationSourceKey": "[replace(variables('sourceScriptWithDestinationSource'), 'privateKeyDefaultValue', parameters('sshPrivateKey'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualMachineNetworkInterfaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-06-01",
              "name": "[variables('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "SSH",
                    "properties": {
                      "priority": 1000,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('virtualNetworkAddressPrefix')]"
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('virtualNetworkName'), variables('subnetName'))]",
              "properties": {
                "addressPrefix": "[variables('subnetAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualMachinePublicIPAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                  "domainNameLabel": "[variables('dnsLabelPrefix')]"
                },
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2020-06-01",
              "name": "[parameters('virtualMachineName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "[parameters('osDiskType')]"
                    }
                  },
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "[parameters('ubuntuOSVersion')]",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNetworkInterfaceName'))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachineName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('sshPublicKey')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNetworkInterfaceName'))]"
              ]
            },
            {
              "condition": "[empty(parameters('hostToSync'))]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2019-07-01",
              "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'configureDestination')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "script": "[base64(variables('destinationScript'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('hostToSync')))]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2019-07-01",
              "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'configureSource')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "script": "[base64(variables('sourceScriptWithDestinationSourceKey'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
              ]
            }
          ],
          "outputs": {
            "adminUsername": {
              "type": "string",
              "value": "[parameters('adminUsername')]"
            },
            "hostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))).dnsSettings.fqdn]"
            },
            "sshCommand": {
              "type": "string",
              "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))).dnsSettings.fqdn)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "mockSpacestationVm",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "location": {
            "value": "[parameters('spacestationLocation')]"
          },
          "hostToSync": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mockGroundstationVm'), '2019-10-01').outputs.hostName.value]"
          },
          "sshPrivateKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))).outputs.keyinfo.privateKey]"
          },
          "sshPublicKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))).outputs.keyinfo.publicKey]"
          },
          "virtualMachineName": {
            "value": "[parameters('spacestationVirtualMachineName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "10011118235435377344"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location to deploy your Virtual Machine"
              }
            },
            "adminUsername": {
              "type": "string",
              "defaultValue": "azureuser",
              "metadata": {
                "description": "The administrator username for your Virtual Machine"
              }
            },
            "hostToSync": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The hostname of the machine to configure rsync to"
              }
            },
            "sshPrivateKey": {
              "type": "secureString",
              "metadata": {
                "description": "The private key for SSH access to other Virtual Machines in this deployment"
              }
            },
            "sshPublicKey": {
              "type": "secureString",
              "metadata": {
                "description": "The public key for SSH access to this Virtual Machine"
              }
            },
            "ubuntuOSVersion": {
              "type": "string",
              "defaultValue": "18.04-LTS",
              "metadata": {
                "description": "The version of Ubuntu to use for your Virtual Machine"
              }
            },
            "virtualMachineName": {
              "type": "string",
              "metadata": {
                "description": "The name of your Virtual Machine"
              }
            },
            "virtualMachineSize": {
              "type": "string",
              "defaultValue": "Standard_B2s",
              "metadata": {
                "description": "The size of your Virtual Machine"
              }
            },
            "osDiskType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "The disk to use for your Virtual Machine"
              }
            }
          },
          "functions": [],
          "variables": {
            "dnsLabelPrefix": "[toLower(format('{0}-{1}', parameters('virtualMachineName'), uniqueString(resourceGroup().id)))]",
            "virtualNetworkName": "[format('{0}VirtualNetwork', parameters('virtualMachineName'))]",
            "virtualNetworkAddressPrefix": "10.1.0.0/16",
            "subnetName": "[format('{0}Subnet', parameters('virtualMachineName'))]",
            "subnetAddressPrefix": "10.1.0.0/24",
            "networkSecurityGroupName": "[format('{0}NetworkSecurityGroup', parameters('virtualMachineName'))]",
            "virtualMachineNetworkInterfaceName": "[format('{0}NetworkInterface', parameters('virtualMachineName'))]",
            "virtualMachinePublicIPAddressName": "[format('{0}publicIPAddress', parameters('virtualMachineName'))]",
            "destinationScript": "[replace('#!/bin/bash\n#\n# configureDestination.sh - applied to a virtual machine by an Azure Custom Script Extension resource to\n#   1. create a /home/azureuser/trials directory\n#   2. write a private key to /home/azureuser/.ssh/mockSpacestationPrivateKey\n#   *. use Bicep''s replace() function to inject values wherever privateKeyDefaultValue appears\n\n# 1. setup trials directory\nmkdir /home/azureuser/trials\nchown azureuser /home/azureuser/trials\n\n# 2. write private key\necho \"privateKeyDefaultValue\" >> /home/azureuser/.ssh/mockSpacestationPrivateKey\nchmod 600 /home/azureuser/.ssh/mockSpacestationPrivateKey\n', 'privateKeyDefaultValue', parameters('sshPrivateKey'))]",
            "sourceScriptWithDestination": "[replace('#!/bin/bash\n#\n# configureDestination.sh - applied to a virtual machine by an Azure Custom Script Extension resource to\n#   1. create a /home/azureuser/trials directory\n#   2. write a private key to /home/azureuser/.ssh/mockSpacestationPrivateKey\n#   3. add the destination machine''s public keys to root''s known_hosts\n#   4. write a /home/azureusers/sync.sh script that contains an rsync command that \n#      clones the /trials directory to the destination machine\n#   5. register a cron job to execute the sync.sh script on a schedule\n#   *. use Bicep''s replace() function to\n#        inject values wherever virtualMachineNameDefaultValue appears\n#        inject values wherever privateKeyDefaultValue appears\n#        inject values wherever hostToSyncDefaultValue appears\n\n# 1. setup trials directory\nmkdir /home/azureuser/trials\necho \"Hello! It is currently $(date) on the virtualMachineNameDefaultValue. Happy hacking!\" >> /home/azureuser/trials/hello.txt\nchown azureuser /home/azureuser/trials\n\n# 2. write private key\necho \"privateKeyDefaultValue\" >> /home/azureuser/.ssh/mockSpacestationPrivateKey\nchmod 600 /home/azureuser/.ssh/mockSpacestationPrivateKey\n\n# 3. write destination machine keys to known_hosts\nssh-keyscan hostToSyncDefaultValue >> /root/.ssh/known_hosts\n\n# 4. setup sync script\nmkdir /home/azureuser/scripts\ntouch /home/azureuser/scripts/sync.sh\ncat > /home/azureuser/scripts/sync.sh <<EOF\n#!/bin/bash\nsudo rsync -arvz --bwlimit=250 -e \"ssh -i /home/azureuser/.ssh/mockSpacestationPrivateKey\" --verbose --progress /home/azureuser/trials/* azureuser@hostToSyncDefaultValue:/home/azureuser/trials\nEOF\nchmod +x /home/azureuser/scripts/sync.sh\n\n# 5. register cron\necho \"* * * * * /home/azureuser/scripts/sync.sh >> /home/azureuser/azure-sync.log 2>&1\" >> newJob\ncrontab newJob\n', 'hostToSyncDefaultValue', parameters('hostToSync'))]",
            "sourceScriptWithDestinationSource": "[replace(variables('sourceScriptWithDestination'), 'virtualMachineNameDefaultValue', parameters('virtualMachineName'))]",
            "sourceScriptWithDestinationSourceKey": "[replace(variables('sourceScriptWithDestinationSource'), 'privateKeyDefaultValue', parameters('sshPrivateKey'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualMachineNetworkInterfaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-06-01",
              "name": "[variables('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "SSH",
                    "properties": {
                      "priority": 1000,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('virtualNetworkAddressPrefix')]"
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('virtualNetworkName'), variables('subnetName'))]",
              "properties": {
                "addressPrefix": "[variables('subnetAddressPrefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualMachinePublicIPAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                  "domainNameLabel": "[variables('dnsLabelPrefix')]"
                },
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2020-06-01",
              "name": "[parameters('virtualMachineName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "[parameters('osDiskType')]"
                    }
                  },
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "[parameters('ubuntuOSVersion')]",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNetworkInterfaceName'))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachineName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('sshPublicKey')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNetworkInterfaceName'))]"
              ]
            },
            {
              "condition": "[empty(parameters('hostToSync'))]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2019-07-01",
              "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'configureDestination')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "script": "[base64(variables('destinationScript'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('hostToSync')))]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2019-07-01",
              "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'configureSource')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "script": "[base64(variables('sourceScriptWithDestinationSourceKey'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
              ]
            }
          ],
          "outputs": {
            "adminUsername": {
              "type": "string",
              "value": "[parameters('adminUsername')]"
            },
            "hostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))).dnsSettings.fqdn]"
            },
            "sshCommand": {
              "type": "string",
              "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIPAddressName'))).dnsSettings.fqdn)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', variables('generateSshKeyScriptName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'mockGroundstationVm')]"
      ]
    }
  ],
  "outputs": {
    "generateSshKeyScriptName": {
      "type": "string",
      "value": "[variables('generateSshKeyScriptName')]"
    },
    "groundstationAdminUsername": {
      "type": "string",
      "value": "[variables('adminUsername')]"
    },
    "groundstationHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mockGroundstationVm'), '2019-10-01').outputs.hostName.value]"
    },
    "keyvaultName": {
      "type": "string",
      "value": "[variables('keyvaultName')]"
    },
    "privateKeySecretName": {
      "type": "string",
      "value": "[variables('privateKeySecretName')]"
    },
    "spacestationAdminUsername": {
      "type": "string",
      "value": "[variables('adminUsername')]"
    },
    "spacestationHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mockSpacestationVm'), '2019-10-01').outputs.hostName.value]"
    }
  }
}