{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "8973677181127318323"
    }
  },
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "mockGroundstation",
      "metadata": {
        "description": "The name of the new virtual machine"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ]
    },
    "includePublicIP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Include a Public IP Address"
      }
    },
    "adminPassword": {
      "type": "string",
      "metadata": {
        "description": "SSH key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D8s_v3",
      "allowedValues": [
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_B16ms",
        "Standard_B20ms",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3"
      ]
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "spacestation-vnet",
      "metadata": {
        "description": "The Virtual Network name (new or existing) for the GroundStation VM"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "spacestation-subnet",
      "metadata": {
        "description": "The Virtual Subnet name (new or existing) for the GroundStation VM"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "spacestationNSG",
      "metadata": {
        "description": "The Network Security Name (new or existing) for the GroundStation VM"
      }
    }
  },
  "functions": [],
  "variables": {
    "dnsLabelPrefix": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id)))]",
    "ubuntuOSVersion": "18.04-LTS",
    "location": "[resourceGroup().location]",
    "adminUsername": "azureuser",
    "publicIPAddressName": "[format('{0}PublicIP', parameters('vmName'))]",
    "networkInterfacePublicIPName": "[format('{0}PubNetInt', parameters('vmName'))]",
    "networkInterfacePrivateIPName": "[format('{0}PrivNetInt', parameters('vmName'))]",
    "subnetRef": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), parameters('subnetName'))]",
    "osDiskType": "Standard_LRS",
    "subnetAddressPrefix": "10.1.0.0/24",
    "addressPrefix": "10.1.0.0/16",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', variables('adminUsername'))]",
            "keyData": "[parameters('adminPassword')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "condition": "[parameters('includePublicIP')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfacePublicIPName')]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfacePrivateIPName')]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('includePublicIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmName')]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            },
            "diskSizeGB": 120
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[if(parameters('includePublicIP'), resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfacePublicIPName')), resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfacePrivateIPName')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]",
          "customData": "IyEvYmluL2Jhc2gKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBodHRwczovL2dvLm1pY3Jvc29mdC5jb20vZndsaW5rLz9saW5raWQ9MjA5MDMxNiBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi4KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIwojIFVzZWQgb24gYSBibGFuayBWTSBTZXRzIHZpYSBBenVyZSB0ZW1wbGF0ZXMgdG8gZGVwbG95IHRoZSBNb2NrIFNwYWNlU3RhdGlvbiBlbnZpcm9ubWVudC4gIE1vc3RseSBhIHdyYXBwZXIgZm9yIGRlcGxveUdyb3VuZFN0YXRpb24uc2gKIyBTeW50YXg6IC4vcnVuRnJvbUF6dXJlVGVtcGxhdGUuc2gKCmN1cmwgLU8gImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9henVyZS9tb2NrLXNwYWNlc3RhdGlvbi8uZGV2Y29udGFpbmVyL3NldHVwU2NyaXB0cy9kZXBsb3lHcm91bmRTdGF0aW9uLnNoIgouIC4vZGVwbG95R3JvdW5kU3RhdGlvbi5zaA=="
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfacePrivateIPName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfacePublicIPName'))]"
      ]
    },
    {
      "type": "Microsoft.DevTestLab/schedules",
      "apiVersion": "2018-09-15",
      "name": "[format('shutdown-computevm-{0}', parameters('vmName'))]",
      "location": "[variables('location')]",
      "properties": {
        "status": "Enabled",
        "taskType": "ComputeVmShutdownTask",
        "dailyRecurrence": {
          "time": "23:00"
        },
        "timeZoneId": "Eastern Standard time",
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    }
  ],
  "outputs": {
    "administratorUsername": {
      "type": "string",
      "value": "[variables('adminUsername')]"
    },
    "hostname": {
      "type": "string",
      "value": "[if(parameters('includePublicIP'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn, parameters('vmName'))]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[if(parameters('includePublicIP'), format('ssh {0}@{1}', variables('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn), format('ssh {0}@{1}', variables('adminUsername'), reference(resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfacePrivateIPName'))).ipConfigurations[0].properties.privateIPAddress))]"
    }
  }
}